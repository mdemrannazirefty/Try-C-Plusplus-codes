#include <iostream>
#include <algorithm>

int main() {
    int arr[] = {4, 2, 2, 8, 3, 3, 1};
    int n = sizeof(arr) / sizeof(arr[0]);

    // Find the maximum and minimum values in the array
    int maxVal = *std::max_element(arr, arr + n);
    int minVal = *std::min_element(arr, arr + n);

    // Calculate the range of values
    int range = maxVal - minVal + 1;

    // Create a counting array
    int count[range] = {0};

    // Count the occurrences of each element in the input array
    for (int i = 0; i < n; i++) {
        count[arr[i] - minVal]++;
    }

    // Reconstruct the sorted array
    int sortedArr[n];
    int index = 0;
    for (int i = 0; i < range; i++) {
        while (count[i] > 0) {
            sortedArr[index] = i + minVal;
            count[i]--;
            index++;
        }
    }

    // Update the original array with the sorted values
    for (int i = 0; i < n; i++) {
        arr[i] = sortedArr[i];
    }

    // Print the sorted array
    std::cout << "Sorted array: ";
    for (int i = 0; i < n; i++) {
        std::cout << arr[i] << " ";
    }
    std::cout << std::endl;

    return 0;
}
